{
  "hash": "1d8e1f49fb46348744d0cf29370141dc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data visualization for survey data\"\nauthor: \"Jihong Zhang\"\ndescription: \"Many tutorials online are about general data visualization. This post aims to showcase some tricks for survey data\"\ndate: \"2023-07-04\"\ndraft: false\ncategories: \n  - blog\n  - ggplot2\nformat:\n  html:\n    toc: true\n    code-fold: show\n    code-summary: ' R Code'\n    code-line-numbers: false\n    number-sections: true\n    number-offset: 1\n---\n\n\n## R package - survey\n\n### What ChatGPT say about `survey` package\n\n> Me: I don't know much about `survey` R package. Can you tell me know about core features of this package?\n\nSure, the `survey` package in R is designed specifically for analysis of data from complex surveys. It provides functions for descriptive statistics and general regression models for survey data that includes design features such as clustering, stratification, and weighting.\n\nHere are some of the core features of the `survey` package:\n\n1.  **Descriptive Statistics:** The package provides functions for computing descriptive statistics on survey data, including mean, total, and quantiles.\n\n2.  **Regression Models:** The package provides a variety of model fitting functions for binary and multi-category response, count data, survival data, and continuous response.\n\n3.  **Design Effects:** It allows calculation of design effects for complex survey designs.\n\n4.  **Post-stratification and Raking:** The package allows for adjusting the sampling weights to match known population margins.\n\n5.  **Subpopulation Analysis:** It includes functions for correctly handling analyses that are limited to a subset of the population (a subpopulation).\n\n6.  **Variance Estimation:** The `survey` package supports multiple methods of variance estimation, including Taylor series linearization, replication weights, and subbootstrap.\n\nRemember that before you can use these functions, you will need to define a survey design object that specifies the features of your survey's design (like the sampling method, strata, clustering, and weights).\n\nHere's an example of how you might use it to calculate the mean of a variable from a survey:\n\n``` r\n# Load the necessary package\nlibrary(survey)\n\n# Define the survey design\ndes <- svydesign(ids = ~1, data = mydata, weights = ~weight)\n\n# Calculate the mean of a variable\nmean <- svytotal(~variable, design = des)\n```\n\nPlease replace `mydata`, `weight`, and `variable` with your actual data frame, weight column, and the variable you're interested in, respectively.\n\nRemember, working with survey data can be complex due to the design features of surveys. The `survey` package in R provides a robust set of tools for dealing with this complexity.\n\n## An empirical example\n\nThe example I used here is a tody data exacted from a real data about eating disorders. The sample size is 500.\n\nThe measurement data contains 12 items, each ranging from 0 to 3. The demographic data contains 6 variables: age, gender, race, birthplace, height, weight. The very first thing is to visualize the characteristics of the samples to have a big picture of respondents.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nknitr::opts_chunk$set(echo = TRUE, message=FALSE, warnings=FALSE, include = TRUE)\nlibrary(here)\nlibrary(glue)\nlibrary(readr)\nlibrary(bruceR)\nlibrary(xtable)\nlibrary(survey)\nlibrary(formattable) # format styles of table \nlibrary(reshape2)\nlibrary(tidyverse)\nlibrary(ggtext) \nlibrary(kableExtra)\noptions(knitr.kable.NA = '')\nmycolors = c(\"#4682B4\", \"#B4464B\", \"#B4AF46\", \n             \"#1B9E77\", \"#D95F02\", \"#7570B3\",\n             \"#E7298A\", \"#66A61E\", \"#B4F60A\")\nsoftcolors = c(\"#B4464B\", \"#F3DCD4\", \"#ECC9C7\", \n               \"#D9E3DA\", \"#D1CFC0\", \"#C2C2B4\")\nmykbl <- function(x, ...){\n  kbl(x, digits = 2, ...) |> kable_styling(bootstrap_options = c(\"striped\", \"condensed\")) }\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndatList <- readRDS(here::here(\"posts/2023-07-04-data-visualization-for-survey-data/Example_Data.RDS\"))\nstr(datList)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ measurement: tibble [500 × 12] (S3: tbl_df/tbl/data.frame)\n  ..$ EDEQS1 : num [1:500] 1 0 3 2 0 0 1 0 2 0 ...\n  ..$ EDEQS2 : num [1:500] 0 0 0 1 0 0 0 0 0 0 ...\n  ..$ EDEQS3 : num [1:500] 0 0 0 2 0 0 0 0 2 0 ...\n  ..$ EDEQS4 : num [1:500] 0 0 1 2 0 0 0 0 1 0 ...\n  ..$ EDEQS5 : num [1:500] 3 1 3 1 0 1 1 0 2 1 ...\n  ..$ EDEQS6 : num [1:500] 1 1 3 2 0 1 1 0 2 1 ...\n  ..$ EDEQS7 : num [1:500] 0 0 0 1 0 0 0 0 0 0 ...\n  ..$ EDEQS8 : num [1:500] 0 0 2 1 0 0 1 0 1 0 ...\n  ..$ EDEQS9 : num [1:500] 0 1 2 2 0 0 2 0 0 0 ...\n  ..$ EDEQS10: num [1:500] 0 0 1 1 0 0 1 0 0 0 ...\n  ..$ EDEQS11: num [1:500] 1 1 2 1 0 1 0 0 1 1 ...\n  ..$ EDEQS12: num [1:500] 2 1 3 2 0 1 1 0 2 1 ...\n $ description: tibble [500 × 6] (S3: tbl_df/tbl/data.frame)\n  ..$ age       : num [1:500] 18 19 18 19 20 19 18 19 19 20 ...\n  ..$ gender    : Factor w/ 2 levels \"男\",\"女\": 2 1 2 2 2 2 2 1 1 2 ...\n  ..$ race      : Factor w/ 2 levels \"汉\",\"少数\": 2 1 1 1 1 1 1 1 1 1 ...\n  ..$ birthplace: Factor w/ 2 levels \"城市\",\"农村\": 2 2 2 1 1 2 2 1 2 2 ...\n  ..$ height    : num [1:500] 160 160 160 160 163 158 170 176 183 155 ...\n  ..$ weight    : num [1:500] 110 100 140 140 90 NA 105 121 180 90 ...\n```\n\n\n:::\n:::\n\n\n### Descriptive statistics\n\nWe can use multiple R tools for descriptive statistics. `bruceR` is one of them.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndescription <- datList$description\nbruceR::Freq(dplyr::select(description, gender:birthplace), \n             varname = \"gender\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nFrequency Statistics:\n────────────\n      N    %\n────────────\n男  172 34.4\n女  328 65.6\n────────────\nTotal N = 500\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfreqTblVars = c(\"gender\", \"race\", \"birthplace\")\nfreqTable <- function(tbl, var) {\n  tbl |> as.data.frame() |> \n    tibble::rownames_to_column(\"Levels\") |> \n    dplyr::mutate(Variable = var)\n}\nfreqTableComb = NULL\nfor (var in freqTblVars) {\n  tbl = bruceR::Freq(dplyr::select(description, gender:birthplace), varname = var)\n  freqTableComb = rbind(freqTableComb, freqTable(tbl = tbl, var = var))\n  freqTableComb <- freqTableComb |> \n    relocate(\"Variable\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nFrequency Statistics:\n────────────\n      N    %\n────────────\n男  172 34.4\n女  328 65.6\n────────────\nTotal N = 500\nFrequency Statistics:\n──────────────\n        N    %\n──────────────\n汉    449 89.8\n少数   51 10.2\n──────────────\nTotal N = 500\nFrequency Statistics:\n──────────────\n        N    %\n──────────────\n城市  183 36.6\n农村  317 63.4\n──────────────\nTotal N = 500\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmykbl(freqTableComb)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Variable </th>\n   <th style=\"text-align:left;\"> Levels </th>\n   <th style=\"text-align:right;\"> N </th>\n   <th style=\"text-align:right;\"> % </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> gender </td>\n   <td style=\"text-align:left;\"> 男 </td>\n   <td style=\"text-align:right;\"> 172 </td>\n   <td style=\"text-align:right;\"> 34.4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> gender </td>\n   <td style=\"text-align:left;\"> 女 </td>\n   <td style=\"text-align:right;\"> 328 </td>\n   <td style=\"text-align:right;\"> 65.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> race </td>\n   <td style=\"text-align:left;\"> 汉 </td>\n   <td style=\"text-align:right;\"> 449 </td>\n   <td style=\"text-align:right;\"> 89.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> race </td>\n   <td style=\"text-align:left;\"> 少数 </td>\n   <td style=\"text-align:right;\"> 51 </td>\n   <td style=\"text-align:right;\"> 10.2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> birthplace </td>\n   <td style=\"text-align:left;\"> 城市 </td>\n   <td style=\"text-align:right;\"> 183 </td>\n   <td style=\"text-align:right;\"> 36.6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> birthplace </td>\n   <td style=\"text-align:left;\"> 农村 </td>\n   <td style=\"text-align:right;\"> 317 </td>\n   <td style=\"text-align:right;\"> 63.4 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nOr we can use `survey` package for descriptive analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(survey)\ndexample = svydesign(ids = ~1,\n                     data = datList$measurement)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in svydesign.default(ids = ~1, data = datList$measurement): No weights\nor probabilities supplied, assuming equal probability\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(dexample)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nIndependent Sampling design (with replacement)\nsvydesign(ids = ~1, data = datList$measurement)\nProbabilities:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      1       1       1       1       1       1 \nData variables:\n [1] \"EDEQS1\"  \"EDEQS2\"  \"EDEQS3\"  \"EDEQS4\"  \"EDEQS5\"  \"EDEQS6\"  \"EDEQS7\" \n [8] \"EDEQS8\"  \"EDEQS9\"  \"EDEQS10\" \"EDEQS11\" \"EDEQS12\"\n```\n\n\n:::\n\n```{.r .cell-code}\n## summay statistics for all measurement indicators\nvars <- colnames(datList$measurement)\nsvymean(make.formula(vars), design = dexample, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         mean     SE\nEDEQS1  0.882 0.0439\nEDEQS2  0.286 0.0283\nEDEQS3  0.322 0.0280\nEDEQS4  0.328 0.0270\nEDEQS5  0.910 0.0448\nEDEQS6  1.046 0.0500\nEDEQS7  0.120 0.0203\nEDEQS8  0.530 0.0382\nEDEQS9  0.360 0.0295\nEDEQS10 0.398 0.0283\nEDEQS11 0.738 0.0346\nEDEQS12 1.072 0.0413\n```\n\n\n:::\n\n```{.r .cell-code}\nsvytotal(make.formula(vars), design = dexample, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        total     SE\nEDEQS1    441 21.932\nEDEQS2    143 14.160\nEDEQS3    161 13.984\nEDEQS4    164 13.512\nEDEQS5    455 22.404\nEDEQS6    523 25.004\nEDEQS7     60 10.149\nEDEQS8    265 19.112\nEDEQS9    180 14.752\nEDEQS10   199 14.149\nEDEQS11   369 17.300\nEDEQS12   536 20.646\n```\n\n\n:::\n:::\n\n\n### Stacked barplot for survey data responses\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey = datList$measurement\nsurvey <- survey |> \n  mutate(ID = 1:nrow(survey)) |> \n  mutate(across(starts_with(\"EDEQS\"), \\(x) factor(x, levels = 0:3))) |> \n  pivot_longer(starts_with(\"EDEQS\"), names_to = \"items\", values_to = \"values\") |> \n  group_by(items) |> \n  dplyr::count(values) |> \n  dplyr::mutate(perc = n/sum(n) * 100)\n\np = ggplot(survey) +\n  geom_col(aes(y = factor(items, levels = paste0(\"EDEQS\", 1:12)),\n               x = perc,\n               fill = values), \n           position = position_stack(reverse = TRUE)) +\n  labs(y = \"\", x = \"Proportion (%)\", title = \"N and proportion of responses for items\")\n\np = p + geom_text(aes(y = factor(items, levels = paste0(\"EDEQS\", 1:12)),\n                  x = perc, group = items,\n                  label = ifelse(n >= 50, paste0(n, \"(\", round(perc, 1), \"%)\"), \"\")), \n              size = 3, color = \"white\",\n              position = position_stack(reverse = TRUE, vjust = 0.5))\np = p + scale_fill_manual(values = mycolors)\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nWe can clearly identify item 7 has highest proportion of level 0, and needed to be theoretically justified.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}